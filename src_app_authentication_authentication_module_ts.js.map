{"version":3,"file":"src_app_authentication_authentication_module_ts.js","mappings":"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","sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/locked/locked.component.ts","./src/app/authentication/locked/locked.component.html","./src/app/authentication/page500/page500.component.ts","./src/app/authentication/page500/page500.component.html","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { Page500Component } from './page500/page500.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent\r\n  },\r\n  {\r\n    path: 'locked',\r\n    component: LockedComponent\r\n  },\r\n  {\r\n    path: 'page404',\r\n    component: Page404Component\r\n  },\r\n  {\r\n    path: 'page500',\r\n    component: Page500Component\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { Page500Component } from './page500/page500.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n@NgModule({\r\n  declarations: [\r\n    Page500Component,\r\n    Page404Component,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    LockedComponent,\r\n    ForgotPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  loginForm: UntypedFormGroup;\r\n  submitted = false;\r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ]\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid p-0\">\r\n  <div class=\"row g-0\">\r\n    <div class=\"col-lg-4\">\r\n      <div class=\"auth-content p-4 d-flex align-items-center min-vh-100\">\r\n        <div class=\"w-100\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-lg-9\">\r\n              <div>\r\n                <div class=\"text-center\">\r\n                  <div>\r\n                    <a routerLink=\"\" class=\"logo-full\"><img src=\"assets/images/logo-full.png\" alt=\"logo-full\"></a>\r\n                  </div>\r\n\r\n                  <h4 class=\"font-20 mt-4\">Forgotten Password ?</h4>\r\n                  <p class=\"text-muted\">Enter your email to reset your password</p>\r\n                </div>\r\n\r\n                <div class=\"p-2 mt-5\">\r\n                  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group auth-form-group mb-4\">\r\n                      <mat-icon matSuffix class=\"auth-page-icon\">email</mat-icon>\r\n                      <input type=\"email\" formControlName=\"email\" class=\"form-control auth-control\" id=\"email\"\r\n                        placeholder=\"Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\r\n                      <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                        <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"container-login100-form-btn\">\r\n                      <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n                        Reset My Password\r\n                      </button>\r\n                    </div>\r\n\r\n                  </form>\r\n                </div>\r\n\r\n                <div class=\"mt-5 text-center\">\r\n                  <p>Want To Login ? <a routerLink=\"/authentication/signin\" class=\"font-weight-medium text-primary\">\r\n                      Log in </a> </p>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"auth-bg\">\r\n        <div class=\"bg-overlay\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-locked',\r\n  templateUrl: './locked.component.html',\r\n  styleUrls: ['./locked.component.scss']\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  loginForm: UntypedFormGroup;\r\n  submitted = false;\r\n  hide = true;\r\n  constructor(private formBuilder: UntypedFormBuilder, private router: Router) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid p-0\">\r\n  <div class=\"row g-0\">\r\n    <div class=\"col-lg-4\">\r\n      <div class=\"auth-content p-4 d-flex align-items-center min-vh-100\">\r\n        <div class=\"w-100\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-lg-9\">\r\n              <div>\r\n                <div class=\"text-center\">\r\n                  <div>\r\n                    <a routerLink=\"\" class=\"logo-full\"><img src=\"assets/images/logo-full.png\" alt=\"logo-full\"></a>\r\n                  </div>\r\n\r\n                  <h4 class=\"font-20 mt-4\">Lock screen</h4>\r\n                  <p class=\"text-muted\">Enter valid password to unlock the screen.</p>\r\n                </div>\r\n                <div class=\"login100-form-logo\">\r\n                  <div class=\"image\">\r\n                    <img src=\"assets/images/usrbig.jpg\" alt=\"User\">\r\n                  </div>\r\n                </div>\r\n                <span class=\"auth-user-name font-20 p-b-10 p-t-27\">\r\n                  Emily Smith\r\n                </span>\r\n                <div class=\"text-center\">\r\n                  <p class=\"txt1\">\r\n                    Locked\r\n                  </p>\r\n                </div>\r\n                <div class=\"p-2 mt-5\">\r\n                  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group auth-form-group mb-4\">\r\n                      <mat-icon matSuffix class=\"auth-page-icon\">vpn_key</mat-icon>\r\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control auth-control\" id=\"password\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\" />\r\n                      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n                      <div class=\"form-check\">\r\n                        <label class=\"form-check-label\">\r\n                          <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n                          <span class=\"form-check-sign\">\r\n                            <span class=\"check\"></span>\r\n                          </span>\r\n                        </label>\r\n                      </div>\r\n                      <div>\r\n                        <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"container-login100-form-btn\">\r\n                      <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n\r\n                  </form>\r\n                </div>\r\n\r\n                <div class=\"mt-5 text-center\">\r\n                  <p>Don't have an account ? <a routerLink=\"/authentication/signup\"\r\n                      class=\"font-weight-medium text-primary\">\r\n                      Register </a> </p>\r\n                  <div class=\"login100-form-social flex-c-m\">\r\n                    <a href=\"#\" class=\"login100-form-social-item flex-c-m bg1 m-r-5\">\r\n                      <i class=\"fab fa-facebook-f\"></i>\r\n                    </a>\r\n                    <a href=\"#\" class=\"login100-form-social-item flex-c-m bg2 m-r-5\">\r\n                      <i class=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"auth-bg\">\r\n        <div class=\"bg-overlay\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-page500',\r\n  templateUrl: './page500.component.html',\r\n  styleUrls: ['./page500.component.scss']\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor(private router: Router) {}\r\n  ngOnInit() {}\r\n  submit() {\r\n    this.router.navigate(['/authentication/signin']);\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form\">\r\n        <span class=\"error-header p-b-45\">\r\n          500\r\n        </span>\r\n        <span class=\"error-subheader2 p-b-5\">\r\n          Oops, Something went wrong. Please try after some times.\r\n        </span>\r\n        <div class=\"container-login100-form-btn p-t-30\t\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" (click)='submit()'>\r\n            Go To Home Page\r\n          </button>\r\n        </div>\r\n        <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n          <div>\r\n            <a href=\"#\" class=\"txt1\">\r\n              Need Help?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-03.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\n// import { AuthService } from 'src/app/core/service/auth.service';\r\nimport { AuthModule, AuthService } from \"@auth0/auth0-angular\";\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport { RAAuthService } from 'src/app/core/service/auth.service';\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss']\r\n})\r\nexport class SigninComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  loginForm: UntypedFormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private Authenticate: RAAuthService\r\n  ) {\r\n    super();\r\n  }\r\n  ngOnInit() {\r\n    // if (this.authService.currentUserValue) {\r\n    //   sessionStorage.setItem(\"user_id\", this.authService.currentUserValue.username as string)\r\n    //   this.router.navigate(['/dashboard/mainRes']);\r\n    // }\r\n    this.authService.loginWithRedirect();\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.error = '';\r\n    if (this.loginForm.invalid) {\r\n      this.error = 'Username and Password not valid !';\r\n      return;\r\n    } else {\r\n      \r\n      this.subs.sink = this.Authenticate\r\n        .login(this.f.email.value, this.f.password.value)\r\n        .subscribe(\r\n          (res) => {\r\n            if (res) {\r\n              const token = this.Authenticate.currentUserValue.token;\r\n              if (token) {\r\n                this.router.navigate(['InventoryComponent']);\r\n                sessionStorage.setItem(\"user_id\", this.f.email.value)\r\n              }\r\n              // this.router.navigate(['InventoryComponent']);\r\n              //   sessionStorage.setItem(\"user_id\", this.f.email.value)\r\n            //   console.log(\"navi\")\r\n            //   this.router.navigate(['InventoryComponent']);\r\n            //   sessionStorage.setItem(\"user_id\", this.f.email.value);\r\n            // } else {\r\n              this.error = 'Invalid Login';\r\n            }\r\n          },\r\n          (error) => {\r\n            this.error = error;\r\n            this.submitted = false;\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  loginForm: UntypedFormGroup;\r\n  submitted = false;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      password: ['', Validators.required],\r\n      cpassword: ['', Validators.required]\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","  <div class=\"container-fluid p-0\">\r\n    <div class=\"row g-0\">\r\n      <div class=\"col-lg-4\">\r\n        <div class=\"auth-content p-4 d-flex align-items-center min-vh-100\">\r\n          <div class=\"w-100\">\r\n            <div class=\"row justify-content-center\">\r\n              <div class=\"col-lg-9\">\r\n                <div>\r\n                  <div class=\"text-center\">\r\n                    <div>\r\n                      <a routerLink=\"\" class=\"logo-full\"><img src=\"assets/images/logo-full.png\" alt=\"logo-full\"></a>\r\n                    </div>\r\n                    <h4 class=\"font-20 mt-4\">Register New User</h4>\r\n                    <p class=\"text-muted\">Lifetime Free Account.</p>\r\n                  </div>\r\n                  <div class=\"p-2 mt-5\">\r\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">face</mat-icon>\r\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control auth-control\" id=\"username\"\r\n                          placeholder=\"Username\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\">\r\n                        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">email</mat-icon>\r\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control auth-control\" id=\"email\"\r\n                          placeholder=\"Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\r\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                          <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">vpn_key</mat-icon>\r\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control auth-control\"\r\n                          id=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n                          placeholder=\"Password\" />\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">vpn_key</mat-icon>\r\n                        <input type=\"password\" formControlName=\"cpassword\" class=\"form-control auth-control\"\r\n                          id=\"cpassword\" [ngClass]=\"{ 'is-invalid': submitted && f.cpassword.errors }\"\r\n                          placeholder=\"Confirm Password\" />\r\n                        <div *ngIf=\"submitted && f.cpassword.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.cpassword.errors.required\">Confirm Password is required</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n                        <div>\r\n                          <span>Already Registered? <a routerLink=\"/authentication/signin\">\r\n                              Login\r\n                            </a></span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"container-login100-form-btn\">\r\n                        <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n                          Register\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"mt-3 text-center\">\r\n                    <p> or sign up using </p>\r\n                    <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                          <i class=\"fab fa-google\"></i>\r\n                        </a></li>\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                          <i class=\"fab fa-facebook-f\"></i>\r\n                        </a></li>\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                          <i class=\"fab fa-twitter\"></i>\r\n                        </a></li>\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                          <i class=\"fab fa-linkedin-in\"></i>\r\n                        </a></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-8\">\r\n        <div class=\"auth-bg\">\r\n          <div class=\"bg-overlay\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}